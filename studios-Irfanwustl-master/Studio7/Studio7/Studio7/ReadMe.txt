Please list your group members here and answer all questions below.
Group members:
Irfan Alahi

Answer to 1:
Name: Irfan Alahi

Answer to 2:
The program expects 5 the program expect.
10 winning numbers will be generated.

Answer to 3:
(a)	The program is not stopping
(b) A program might fail to halt if it is in an infinite loop.
(c) I can set break point in the blocks of code in main and see from main where does it go and whether there is a loop or not.
Then I have found the program is not comming from insertion_sort. So I have inspected insertion_sort with setting breakpoint and found that in this function
there is a loop which is not breaking. I have incremented the i in that loop. Thus I have fixed the issue.

Answer to 4:
(a)The program crashes
(b)The exception message is telling that there is an out of bound indexing for some vector.
(c)In binary_search_helper function there is a line: unsigned int middle_index = (start + end); this line is causing the problem. This line should be the 
following: unsigned int middle_index = (start + end)/2;

Answer to 5:
The error was in binary_search_helper function in the following line: if (middle_value = value). There is an = sign missing. It should
be if (middle_value == value) and I have corrected it.

Answer to 6:
Only one change needs to make to the program to do this. 
The program keeps its parameter separate from its logic. That is a good design choice.
_________________________________________________________________________________________________________________________________
Author: Jon Shidal

CSE 332S - Debugging practice

This program plays a simple lottery game. A user inputs their chosen numbers on the command line (1-MAXNUMBER). The program then:
1. generates a list of winning numbers
2. sorts that list
3. uses binary search on the sorted list to determine how many user chosen numbers match the winning numbers
4. outputs the winning numbers and whether or not the user won(you win if more than half of the numbers you supply via the command line are winning numbers) 

Possible program return values:
Enums for theses can be found in lottery.h
0 - NOTAWINNER
1 - WINNER
2 - JACKPOT 
-1 - INCORRECTUSAGE

Program parameters and their default values:
Enum for these can be found in lottery.h
MAXNUMBER = 100   (numbers generated by the program will range from 1 - MAXNUMBER)
WINNINGNUMBERS = 10 (how many winning numbers will be generated)
USERNUMBERS = 5 (how many user supplied numbers the program expects, as command line arguments)

